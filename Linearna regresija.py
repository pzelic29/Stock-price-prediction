# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DqNDva5WjPCLSmuSMlj5TBhrRPLEro9q
"""

pip install quandl

##što će nam sve trebati u programu
import quandl
import numpy as np
from sklearn.linear_model import LinearRegression ##linerana regresija
from sklearn.svm import SVR ##support vector machine
from sklearn.model_selection import train_test_split ##za razdvajanje i uvježbavanje podata te njihovo testiranje
import pandas as pd
import matplotlib.pyplot as plt

#Load the data
from google.colab import files # Use to load data on Google Colab
uploaded = files.upload() # Use to load data on Google Colab
df = pd.read_excel('AAPL.xlsx')
df

df= df[['Adj Close']] ##nezavisna varijabla
print(df.head())

forecast_out= 30 #za koliko dana želimo predvidjeti kretanje cijena dionica
df['Prediction']=df[['Adj Close']].shift(- forecast_out)
print(df.tail())

##stvoriti nezavisni set podataka,za to će nam biti potreban numpy
##pretvoriti podatke u numpy array
x=np.array(df.drop(['Prediction'],1))
##obrisati n dane
x=x[:-forecast_out]
print(x)

##stvaramo zavisnu varijablu y 
##pretvaramo podatke u numpy array
y=np.array(df['Prediction']) 
##sve vrijednosti zavisnog seta podataka osim broja dana za koji želimo napraviti predviđanje
y=y[:-forecast_out]
print(y)

##podatci podijeljeni u 80% podataka za treniranje i 20 % za testiranje,za to koristimo funkciju koju smo definirali na početku
###funkcija train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

##Stvaranje seta i treniranje koristeći model Linearne Regresije
lr=LinearRegression()
##treniranje seta 
lr.fit(x_train,y_train)

##x_forecast jednak broju dana za koliki želimo napraviti predviđanje iz orginalnog seta podataka iz stupca Adj-Close
x_forecast=np.array(df.drop(['Prediction'],1))[-forecast_out:]
print(x_forecast)

##Predviđanje za slijedećih n dana koristeći model linearne regresije 
lr_prediction=lr.predict(x_forecast)
print(lr_prediction)

plt.plot(lr_prediction,color='blue')
plt.xlabel('Dan')
plt.ylabel('Cijena')
plt.title('Prikaz cijena pomoću linearne regresije',size=13,color='blue')